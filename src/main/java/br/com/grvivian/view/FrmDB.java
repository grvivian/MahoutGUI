package br.com.grvivian.view;

import br.com.grvivian.hibernate.ConfigDB;
import br.com.grvivian.hibernate.HibernateUtil;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.hibernate.internal.SessionImpl;

/**
 *
 * @author glaucio
 */
public class FrmDB extends javax.swing.JFrame {

  private ConfigDB configDB;

  /**
   * Creates new form FrmBD
   *
   * @param configDB configuration to DataBase
   */
  public FrmDB(ConfigDB configDB) {
    try {
      this.configDB = configDB;
      configDB.readConfig();
      initComponents();

      tfHost.setText(configDB.getHost());
      tfPort.setText(String.valueOf(configDB.getPort()));
      tfUser.setText(configDB.getUser());
      tfPassword.setText(configDB.getPassword());
      tfDatabase.setText(configDB.getDatabase());
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
      Logger.getLogger(FrmDB.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    tfHost = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    tfPort = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    tfUser = new javax.swing.JTextField();
    tfPassword = new javax.swing.JPasswordField();
    jLabel5 = new javax.swing.JLabel();
    cbTable = new javax.swing.JComboBox<>();
    tfDatabase = new javax.swing.JTextField();
    btConnect = new javax.swing.JButton();
    jLabel6 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    cbUserID = new javax.swing.JComboBox<>();
    cbItemId = new javax.swing.JComboBox<>();
    jLabel9 = new javax.swing.JLabel();
    cbEvaluation = new javax.swing.JComboBox<>();
    btOk = new javax.swing.JButton();

    setTitle("Import Data From Relational Datadase");
    setAlwaysOnTop(true);
    setResizable(false);

    jLabel1.setText("Database");

    jLabel2.setText("Host:");

    jLabel3.setText("Port:");

    jLabel4.setText("User:");

    tfPassword.setText("jPasswordField1");

    jLabel5.setText("Password:");

    cbTable.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        cbTableItemStateChanged(evt);
      }
    });

    btConnect.setText("Connect");
    btConnect.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btConnectActionPerformed(evt);
      }
    });

    jLabel6.setText("Table:");

    jLabel7.setText("User ID:");

    jLabel8.setText("Item ID:");

    cbUserID.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        cbUserIDItemStateChanged(evt);
      }
    });

    cbItemId.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        cbItemIdItemStateChanged(evt);
      }
    });

    jLabel9.setText("Evaluation:");

    cbEvaluation.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        cbEvaluationItemStateChanged(evt);
      }
    });

    btOk.setText("OK");
    btOk.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btOkActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btOk, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addGap(45, 45, 45)
            .addComponent(jLabel6)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cbTable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel2))
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addComponent(tfHost, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3))
              .addGroup(layout.createSequentialGroup()
                .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel4))
              .addComponent(tfDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(btConnect, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
              .addComponent(tfUser)))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel7)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cbUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel8)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cbItemId, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel9)
            .addGap(18, 18, 18)
            .addComponent(cbEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tfHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2)
          .addComponent(jLabel3)
          .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1)
          .addComponent(tfDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btConnect))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cbTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel6))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel7)
          .addComponent(cbUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel8)
          .addComponent(cbItemId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel9)
          .addComponent(cbEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(btOk)
        .addContainerGap())
    );

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void findTables() throws Exception {
    SessionImpl sessionImpl = (SessionImpl) HibernateUtil.getSessionFactory(configDB).openSession();

    Connection connection = sessionImpl.connection();
    DatabaseMetaData databaseMetaData = connection.getMetaData();
    ResultSet resultSet = databaseMetaData.getTables(null, null, null, new String[]{"TABLE"});

    cbTable.removeAllItems();
    while (resultSet.next()) {
      String tableName = resultSet.getString(3);
      cbTable.addItem(tableName);
    }
  }

  private void findAttributeToTable(String table) throws Exception {
    SessionImpl sessionImpl = (SessionImpl) HibernateUtil.getSessionFactory(configDB).openSession();

    Connection connection = sessionImpl.connection();
    DatabaseMetaData databaseMetaData = connection.getMetaData();
    ResultSet resultSet = databaseMetaData.getColumns(null, null, table, null);

    cbUserID.removeAllItems();
    cbItemId.removeAllItems();
    cbEvaluation.removeAllItems();
    while (resultSet.next()) {
      String collumName = resultSet.getString("COLUMN_NAME");
      cbUserID.addItem(collumName);
      cbItemId.addItem(collumName);
      cbEvaluation.addItem(collumName);
    }
  }

  private void getData() {
    /*
    String f1 = (String) cbUserID.getSelectedItem();
    String f2 = (String) cbItemId.getSelectedItem();
    String f3 = (String) cbEvaluation.getSelectedItem();

    

    String[] cols = new String[]{"User ID", "Item ID", "Evaluation"};
    Object[][] data = new new Object[][3];

    jTable1.setModel(new javax.swing.table.DefaultTableModel(data, cols) {
      Class[] types = new Class[]{java.lang.Long.class, java.lang.Long.class, java.lang.Float.class};
      boolean[] canEdit = new boolean[]{false, false, false};

      @Override
      public Class getColumnClass(int columnIndex) {
        return types[columnIndex];
      }

      @Override
      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit[columnIndex];
      }
    });
     */
  }

  private void btConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConnectActionPerformed
    try {
      configDB.setHost(tfHost.getText());
      configDB.setPort(Integer.parseInt(tfPort.getText()));
      configDB.setUser(tfUser.getText());
      configDB.setPassword(new String(tfPassword.getPassword()));
      configDB.setDatabase(tfDatabase.getText());

      findTables();
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
      Logger.getLogger(FrmDB.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_btConnectActionPerformed

  private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
    try {
      configDB.setTable((String) cbTable.getSelectedItem());
      configDB.setUser_id((String) cbUserID.getSelectedItem());
      configDB.setItem_id((String) cbItemId.getSelectedItem());
      configDB.setPref((String) cbEvaluation.getSelectedItem());

      configDB.writeConfig();

      setVisible(false);
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
      Logger.getLogger(FrmDB.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_btOkActionPerformed

  private void cbTableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTableItemStateChanged
    try {
      String t = (String) cbTable.getSelectedItem();
      findAttributeToTable(t);
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(null, ex.getMessage());
      Logger.getLogger(FrmDB.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_cbTableItemStateChanged

  private void cbUserIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUserIDItemStateChanged
    getData();
  }//GEN-LAST:event_cbUserIDItemStateChanged

  private void cbItemIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbItemIdItemStateChanged
    getData();
  }//GEN-LAST:event_cbItemIdItemStateChanged

  private void cbEvaluationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEvaluationItemStateChanged
    getData();
  }//GEN-LAST:event_cbEvaluationItemStateChanged


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btConnect;
  private javax.swing.JButton btOk;
  private javax.swing.JComboBox<String> cbEvaluation;
  private javax.swing.JComboBox<String> cbItemId;
  private javax.swing.JComboBox<String> cbTable;
  private javax.swing.JComboBox<String> cbUserID;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JTextField tfDatabase;
  private javax.swing.JTextField tfHost;
  private javax.swing.JPasswordField tfPassword;
  private javax.swing.JTextField tfPort;
  private javax.swing.JTextField tfUser;
  // End of variables declaration//GEN-END:variables
}
